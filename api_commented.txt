/*
a note about the field 'user_request_id':
- you put in an identifier in your request
- the server will use that same identifier in the response to your request
- it is helpful when responses do not arrive in the same order as you send requests
- (e.g. you won't receive a trade confirmation until it is fullfiled, so it may be not in the same order as you sent your trades)
*/

// ORDER REQUEST RESPONSE example
{
  “type”: “add_order”,
  “user_request_id”: "my_req_id123",          // an identifier you send to the server (so you can match the response with the sent request)
  “instrument_id”: “$CARD_call_82630_360”,
  “price”: 10,                              // Price in cents, always an integer
  “expiry”: 58233560, Date.now() + 3600000, // Expires in 1 hour, auto capped to option expiry
  “side”: “bid”,                            // “bid” to buy, “ask” to sell
  “quantity”: 1                             // Number of contracts
}

{
  // you will receive this message once the trade is fullfiled
  “type”: “add_order_response”,
  “user_request_id”: “my_req_id123",
  “success”: true,
  “data”: { 
    “order_id”: 34                          // order id given by the exchange
  }
}

// PENDING ORDERS REQUEST RESPONSE example
{
  type: “get_pending_orders”,
  user_request_id: “my_req2”,
}

// list of orders that are not fullfiled at the moment
{
  “type”: “get_pending_orders_response”,
  “user_request_id”: “my_req2”,
  “data”: {
    “$CARD_future_60”: [
      [
      // bids
      {
        “orderID”: 25,
        “teamID”: 1,
        “price”: 1,
        “time”: 5694,
        “expiry”: 60000,
        “side”: “BID”,
        “unfilled_quantity”: 1,
        “total_quantity”: 1,
        “live”: true
      }
      ],
      [] // asks
    ]
  }
}

// INVENTORY REQUEST RESPONSE example
{
  type: “get_inventory”,
  user_request_id: “my_req1”,       // an identifier you send to the server (so you can match the response with the sent request)
}

{
“type”: “get_inventory_response”,
“user_request_id”: “my_req1”,       // the server will use the corresponding identifier you sent with the request
“data”: { 
  // in the format: "instrument": [reserved, total]
  “$”: [1760, 1000000],             // $ stands for cash
  "$CARD_call_100000_60": [1, 3],   // we have 3 positions in the instrument, one is reserved (a sell order was sent, but not fullfiled)
  }
}

// MARKET DATA UPDATE example
{
  "type": "market_data_update",
  "time": 3654,   // in miliseconds
  "candles": {
    "tradeable": {
      "$CARD_call_100000_60": [
        {
          "volume": 0,         // the number of trades that happen at that second
          "index": 0           // time in seconds
        },
        {
          "volume": 0,
          "index": 1
        },
        {
          "volume": 0,
          "index": 2
        }
      ],
      "$CARD_call_101000_60": [
        {
          "volume": 0,
          "index": 0
        },
        {
          "volume": 0,
          "index": 1
        },
        {
          "volume": 0,
          "index": 2
        }
      ]
      /**/
    },
    "untradeable": {
      "$CARD": [
        {
          "open": 99617,
          "close": 100332,
          "high": 105215,
          "low": 98926,
          "mid": 100000,
          "index": 0      // time in seconds
        },
        {
          "open": 102034,
          "close": 101760,
          "high": 102359,
          "low": 100495,
          "mid": 101955,
          "index": 1      // time in seconds
        }
        /* underlying prices */
      ]
    }
  },
  "orderbook_depths": {
    /* best three (if available) asks and bids with prices and volume */
    "$CARD_call_100000_60": {
      "bids": {
        "2821": 1         // bid with price 2821 and volume 1
      },
      "asks": {}
    },
    "$CARD_call_101000_60": {
      "bids": {},
      "asks": {
        "2288": 1,
        "2303": 5
      }
    }
  },
  "events": [
    /* executed trades */
    {
      "event_type": "trade",
      "data": {
        "instrumentID": "$SIMP_put_99356_60",
        "passiveOrderID": 1,  
        "activeOrderID": 2,   
        "quantity": 1,
        "price": 1924,
        "time": 3630
      }
      /* passive orders are orders in the order book */
      /* active orders are orders that instantly match the passive orders */
    },
    {
      "event_type": "trade",
      "data": {
        "instrumentID": "$SIMP_put_99356_60",
        "passiveOrderID": 1,
        "activeOrderID": 3,
        "quantity": 2,
        "price": 1924,
        "time": 3630
      }
    },
   {
      "event_type": "settlement",
      "data": {
         "teamID": 0,
         "instrumentID": "$SIMP_put_99485_135",
         "quantity": 0,
         "price_at_expiry": 100777,
         "strike_price": 99485,
         "time": 135008
      }
   }
  ]
}